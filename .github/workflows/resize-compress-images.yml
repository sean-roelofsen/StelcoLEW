name: Resize & Compress Images (Fix Git Push)

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual trigger from GitHub Actions tab

jobs:
  optimize-images:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"

      - name: Install Required Dependencies
        run: pip install pillow

      - name: Resize and Compress Images
        run: |
          python - <<EOF
          from PIL import Image
          import os

          # Define folders to process
          image_folders = ["images", "images2"]
          max_width = 3000  # Resize while keeping 4:3 aspect ratio
          max_height = 2250 
          quality = 75       # JPEG quality (lower = smaller file)

          modified_files = False  # Track if any images were modified

          for folder in image_folders:
              if not os.path.exists(folder):
                  continue  # Skip missing folders

              for filename in os.listdir(folder):
                  if filename.lower().endswith(('.jpg', '.jpeg')):  
                      img_path = os.path.join(folder, filename)
                      img = Image.open(img_path)

                      # Resize while keeping aspect ratio
                      img.thumbnail((max_width, max_height), Image.LANCZOS)

                      # Overwrite original image with optimized version
                      img.save(img_path, "JPEG", quality=quality, optimize=True)
                      print(f"âœ” Compressed {filename} in {folder}")
                      modified_files = True  # Flag that we modified images

          if not modified_files:
              print("âœ… No images needed optimization. Exiting without commit.")
              exit(0)  # Stop the workflow if no images were changed

          print("âœ… All images resized & compressed successfully!")
          EOF

      - name: Force Git to Recognize Image Changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Ensure Git detects changes to binary files (JPEGs)
          git add -A
          git commit -m "ðŸ”§ Force update: Auto-resized & compressed images" --allow-empty
          
          # Force push the images to update them in GitHub
          git push origin main --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
